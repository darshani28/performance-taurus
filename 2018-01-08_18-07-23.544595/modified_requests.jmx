<?xml version='1.0' encoding='UTF-8'?>
<jmeterTestPlan>
  <hashTree>
    <TestPlan enabled="true" guiclass="TestPlanGui" testclass="TestPlan" testname="BZT Generated Test Plan">
      <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="TestPlan.user_defined_variables" testclass="Arguments"/>
    <boolProp name="TestPlan.functional_mode">false</boolProp></TestPlan>
    <hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup enabled="true" guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="File Upload using REST API"><elementProp elementType="com.blazemeter.jmeter.control.VirtualUserController" name="ThreadGroup.main_controller"/><stringProp name="ThreadGroup.on_sample_error">continue</stringProp><stringProp name="TargetLevel">10</stringProp><stringProp name="RampUp">50</stringProp><stringProp name="Steps">0</stringProp><stringProp name="Hold">60</stringProp><stringProp name="LogFilename"></stringProp><stringProp name="Iterations"></stringProp><stringProp name="Unit">S</stringProp></com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup><hashTree type="tg">
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Defaults">
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <elementProp elementType="Arguments" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments" testname="user_defined"/>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploading ">
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.path">/zoomdata/api/upload/${sourceId}?accountId=${accountId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <elementProp elementType="HTTPFileArgs" name="HTTPsampler.Files">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp elementType="HTTPFileArg" name="/Users/jemal/jemal-performance-project/performance-taurus/MiscTest.csv">
                <stringProp name="File.path">/Users/jemal/jemal-performance-project/performance-taurus/MiscTest.csv</stringProp>
                <stringProp name="File.paramname">fileData</stringProp>
                <stringProp name="File.mimetype">text/csv</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers">
            <collectionProp name="HeaderManager.headers">
              <elementProp elementType="Header" name="">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${__base64Encode(${__P(user-auth)})}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert has [&quot;&quot;succeeded&quot;&quot;, &quot;&quot;failed&quot;:0&quot;]">
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <stringProp name="Assertion.test_type">16</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <collectionProp name="Asserion.test_strings">
              <stringProp name="">"succeeded"</stringProp>
              <stringProp name="">"failed":0</stringProp>
            </collectionProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false"/>
      <hashTree/>
    <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables from Taurus"><collectionProp name="Arguments.arguments"><elementProp elementType="Argument" name="accountId"><stringProp name="Argument.name">accountId</stringProp><stringProp name="Argument.value">5a2ef7a2e4b043bb0659cddf</stringProp><stringProp name="Argument.desc"></stringProp><stringProp name="Argument.metadata">=</stringProp></elementProp><elementProp elementType="Argument" name="host"><stringProp name="Argument.name">host</stringProp><stringProp name="Argument.value">localhost</stringProp><stringProp name="Argument.desc"></stringProp><stringProp name="Argument.metadata">=</stringProp></elementProp><elementProp elementType="Argument" name="port"><stringProp name="Argument.name">port</stringProp><stringProp name="Argument.value">8080</stringProp><stringProp name="Argument.desc"></stringProp><stringProp name="Argument.metadata">=</stringProp></elementProp><elementProp elementType="Argument" name="sourceId"><stringProp name="Argument.name">sourceId</stringProp><stringProp name="Argument.value">5a4588ffe4b043bb5a947999</stringProp><stringProp name="Argument.desc"></stringProp><stringProp name="Argument.metadata">=</stringProp></elementProp></collectionProp></Arguments><hashTree/><ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="KPI Writer"><stringProp name="filename">/Users/jemal/jemal-performance-project/performance-taurus/2018-01-08_18-07-23.544595/kpi.jtl</stringProp><objProp><name>saveConfig</name><value class="SampleSaveConfiguration"><code>true</code><encoding>false</encoding><threadCounts>true</threadCounts><samplerData>false</samplerData><assertions>false</assertions><message>true</message><responseHeaders>false</responseHeaders><xml>false</xml><latency>true</latency><requestHeaders>false</requestHeaders><hostname>true</hostname><fieldNames>true</fieldNames><label>true</label><subresults>false</subresults><saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage><dataType>false</dataType><timestamp>true</timestamp><responseData>false</responseData><success>true</success><url>false</url><threadName>true</threadName><bytes>true</bytes><responseDataOnError>false</responseDataOnError><time>true</time></value></objProp></ResultCollector><hashTree/><ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Errors Writer"><stringProp name="filename">/Users/jemal/jemal-performance-project/performance-taurus/2018-01-08_18-07-23.544595/error.jtl</stringProp><objProp><name>saveConfig</name><value class="SampleSaveConfiguration"><code>true</code><encoding>true</encoding><threadCounts>true</threadCounts><samplerData>false</samplerData><assertions>true</assertions><message>true</message><responseHeaders>true</responseHeaders><xml>true</xml><latency>true</latency><requestHeaders>true</requestHeaders><fieldNames>true</fieldNames><label>true</label><subresults>true</subresults><saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage><dataType>true</dataType><timestamp>true</timestamp><responseData>true</responseData><success>true</success><url>true</url><threadName>true</threadName><bytes>true</bytes><responseDataOnError>true</responseDataOnError><time>true</time></value></objProp><boolProp name="ResultCollector.error_logging">true</boolProp></ResultCollector><hashTree/></hashTree>
  </hashTree>
</jmeterTestPlan>
